#!/bin/bash
# nix-env wrapper that combines best of both worlds declarative + imperative use of nix-env
# thank you to https://gist.github.com/danbst
#
# Usage:
# nix-env_wrapper install nixpkg.<package_name>
# nix-env_wrapper uninstall nixpkg.<package_name>
# nix-env_wrapper list
#
# package configuration is saved in ~/.config/nixpkgs/declarative as a human readable list (as well as for use with this script)
# and in ~/.config/nixpkgs/declarative-env.nix for easy portability and configuration on a new system!

statefile=~/.config/nixpkgs/declarative

action="$1"
package="$2"

mkdir -p $(dirname "$statefile")
touch "$statefile"


function update {
  envExpr=~/.config/nixpkgs/declarative-env.nix
  truncate -s 0 "$envExpr"
  for ch in $(ls /nix/var/nix/profiles/per-user/root/channels | grep -v -e manifest -e binary-caches) ; do
    echo "let $ch = import <$ch> { }; in" >> "$envExpr"
  done
  echo "let _pkgs = import <nixpkgs> { }; in" >> "$envExpr"
  echo "rec { _paths = [" >> "$envExpr"
  cat "$statefile" | sort -u >> "$envExpr"
  echo "             ]; " >> "$envExpr"
  echo "      env = _pkgs.buildEnv {" >> "$envExpr"
  echo "      name = ''declarative-collection''; " >> "$envExpr"
  echo "      paths = _paths;" >> "$envExpr"
  echo "}; }" >> "$envExpr"
  \nix-env -Q -if "$envExpr" -A env && echo "updated successfully!" >> "$envExpr"
        cd /home/valar/.config/nixpkgs && git commit -a -m "update $package" &>0 && git push origin master &>0 
}

case "$action" in
install|add|i|-i)
    pure_pkg_name="$package"
  # fast sanity check to make sure .nixpkgs is part of the package name
    if [[ "$package" != *"nixpkgs"* ]] ; then
      echo "no such pkg, trying nixpkgs.$package"
      package="nixpkgs.$package"
    fi
    # make sure the package exists, slow but important
    if ! (nix-env -qa $pure_pkg_name) ; then
      exit 1
    fi

    if (grep -Eq "^$package\$" "$statefile"); then
        echo "already installed, updating"
    else
        echo "scheduled install & update"
        echo "$package" >> "$statefile"
    fi
    
    # TODO: trap?
    update && echo "success" || sed -i "/^$package$/d" $statefile
    cd /home/valar/.config/nixpkgs && git commit -a -m "add $package" &>0 && git push origin master &>0 
;;
uninstall|-e|e|remove|delete|del|rm|remove)
    if (grep -Eq "^$package\$" "$statefile"); then
        sed -i "/^$package\$/d" $statefile
        update && echo "success"
        cd /home/valar/.config/nixpkgs && git commit -a -m "remove $package" &>0 && git push origin master &>0 
    else
        echo "not installed"
    fi
;;
list|l|-l)
    cat "$statefile"
;;
*)
  # otherwise use nix-env directly
    nix-env '"$@"'
    #echo Command not specified. Try $(basename "$0") install nixpkgs.htop
    #echo Command list: install, uninstall, list
;;
esac
